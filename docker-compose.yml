version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: n8n_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-n8n}
      POSTGRES_USER: ${POSTGRES_USER:-n8n}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-n8n_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER:-n8n}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # N8N Application
  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: n8n_app
    restart: unless-stopped
    user: node
    environment:
      # Database Configuration
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB:-n8n}
      DB_POSTGRESDB_USER: ${POSTGRES_USER:-n8n}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD:-n8n_password}
      DB_POSTGRESDB_SCHEMA: public
      
      # Timezone Configuration
      GENERIC_TIMEZONE: ${GENERIC_TIMEZONE:-UTC}
      TZ: ${TZ:-UTC}
      
      # Webhook Configuration
      WEBHOOK_URL: ${WEBHOOK_URL:-http://localhost:5678/}
      
      # n8n Configuration
      N8N_HOST: ${N8N_HOST:-localhost}
      N8N_PORT: ${N8N_PORT:-5678}
      N8N_PROTOCOL: ${N8N_PROTOCOL:-http}
      N8N_SECURE_COOKIE: ${N8N_SECURE_COOKIE:-false}
      
      # Push Backend (WebSocket is default in v1.0+)
      N8N_PUSH_BACKEND: websocket
      
      # Execution Configuration (main is now default and recommended)
      EXECUTIONS_MODE: ${EXECUTIONS_MODE:-regular}
      EXECUTIONS_DATA_SAVE_ON_ERROR: ${EXECUTIONS_DATA_SAVE_ON_ERROR:-all}
      EXECUTIONS_DATA_SAVE_ON_SUCCESS: ${EXECUTIONS_DATA_SAVE_ON_SUCCESS:-all}
      
      # Data Retention (default in v1.0+)
      EXECUTIONS_DATA_PRUNE: ${EXECUTIONS_DATA_PRUNE:-true}
      EXECUTIONS_DATA_PRUNE_MAX_COUNT: ${EXECUTIONS_DATA_PRUNE_MAX_COUNT:-10000}
      EXECUTIONS_DATA_PRUNE_MAX_AGE: ${EXECUTIONS_DATA_PRUNE_MAX_AGE:-168}
      
      # Performance Settings
      N8N_DEFAULT_BINARY_DATA_MODE: ${N8N_DEFAULT_BINARY_DATA_MODE:-filesystem}
      N8N_BINARY_DATA_TTL: ${N8N_BINARY_DATA_TTL:-1440}
      
      # Metrics (optional)
      N8N_METRICS: ${N8N_METRICS:-false}
      
      # Log Level
      N8N_LOG_LEVEL: ${N8N_LOG_LEVEL:-info}
      
      # API Keys (Available in n8n as environment variables)
      WORLDNEWS_API_KEY: ${WORLDNEWS_API_KEY:-}
      HF_API_TOKEN: ${HF_API_TOKEN:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      IMGFLIP_USERNAME: ${IMGFLIP_USERNAME:-}
      IMGFLIP_PASSWORD: ${IMGFLIP_PASSWORD:-}
      IG_USER_ID: ${IG_USER_ID:-}
      IG_ACCESS_TOKEN: ${IG_ACCESS_TOKEN:-}
      GSHEET_ID: ${GSHEET_ID:-}
      
      # Ollama Configuration
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL:-http://host.docker.internal:11434}
      OLLAMA_MODEL: ${OLLAMA_MODEL:-llama3.2}
      
      # Security Settings
      N8N_BLOCK_ENV_ACCESS_IN_NODE: ${N8N_BLOCK_ENV_ACCESS_IN_NODE:-false}
      
    ports:
      - "${N8N_PORT:-5678}:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n_network
    extra_hosts:
      # Allow access to host services (including Ollama)
      - "host.docker.internal:host-gateway"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:5678/healthz || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


volumes:
  postgres_data:
    driver: local
  n8n_data:
    driver: local

networks:
  n8n_network:
    driver: bridge
